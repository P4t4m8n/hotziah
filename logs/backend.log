15.10.2024, 18:17:55 - ERROR - Error saving entity of type posts | input must be a 24 character hex string, 12 byte Uint8Array, or an integer
15.10.2024, 18:18:48 - ERROR - Error saving entity of type posts | input must be a 24 character hex string, 12 byte Uint8Array, or an integer
15.10.2024, 18:19:37 - ERROR - Error saving entity of type posts | input must be a 24 character hex string, 12 byte Uint8Array, or an integer
15.10.2024, 18:19:54 - ERROR - Error saving entity of type posts | input must be a 24 character hex string, 12 byte Uint8Array, or an integer
15.10.2024, 18:20:24 - ERROR - Error saving entity of type posts | input must be a 24 character hex string, 12 byte Uint8Array, or an integer
15.10.2024, 18:20:37 - ERROR - Error saving entity of type posts | input must be a 24 character hex string, 12 byte Uint8Array, or an integer
15.10.2024, 18:22:12 - ERROR - Error saving entity of type posts | input must be a 24 character hex string, 12 byte Uint8Array, or an integer
15.10.2024, 18:22:58 - ERROR - Error saving entity of type posts | input must be a 24 character hex string, 12 byte Uint8Array, or an integer
15.10.2024, 18:23:13 - ERROR - Error saving entity of type posts | input must be a 24 character hex string, 12 byte Uint8Array, or an integer
15.10.2024, 18:24:04 - ERROR - Error saving entity of type posts | input must be a 24 character hex string, 12 byte Uint8Array, or an integer
15.10.2024, 18:24:20 - ERROR - Error saving entity of type posts | input must be a 24 character hex string, 12 byte Uint8Array, or an integer
15.10.2024, 18:25:39 - ERROR - Error saving entity of type posts | input must be a 24 character hex string, 12 byte Uint8Array, or an integer
15.10.2024, 18:26:54 - ERROR - Error saving entity of type posts | input must be a 24 character hex string, 12 byte Uint8Array, or an integer
15.10.2024, 18:27:33 - ERROR - Error saving entity of type posts | input must be a 24 character hex string, 12 byte Uint8Array, or an integer
15.10.2024, 19:16:03 - ERROR - Error getting entity by ID of type threads | Entity not found
15.10.2024, 19:16:37 - ERROR - Error getting entity by ID of type threads | Entity not found
15.10.2024, 19:16:46 - ERROR - Error getting entity by ID of type threads | Entity not found
15.10.2024, 19:26:43 - ERROR - Error getting entity by ID of type threads | Entity not found
15.10.2024, 19:27:01 - ERROR - Error getting entity by ID of type threads | No model config found for key threads
15.10.2024, 19:27:08 - ERROR - Error getting entity by ID of type threads | Entity not found
17.10.2024, 21:37:14 - ERROR - Error in getForum service | take is not defined
17.10.2024, 21:40:44 - ERROR - Error in getForum service | numOfPosts is not defined
17.10.2024, 21:42:01 - ERROR - Error in getForum service | 
Invalid `prisma.forum.findUnique()` invocation:


Too many database connections opened: FATAL: sorry, too many clients already
17.10.2024, 21:42:03 - ERROR - Error in getForum service | 
Invalid `prisma.forum.findUnique()` invocation:


Too many database connections opened: FATAL: sorry, too many clients already
17.10.2024, 21:42:11 - ERROR - Error in getForum service | 
Invalid `prisma.forum.findUnique()` invocation:


Too many database connections opened: FATAL: sorry, too many clients already
17.10.2024, 21:42:12 - ERROR - Error in getForum service | 
Invalid `prisma.forum.findUnique()` invocation:


Too many database connections opened: FATAL: sorry, too many clients already
17.10.2024, 21:42:19 - ERROR - Error in getForum service | 
Invalid `prisma.forum.findUnique()` invocation:


Too many database connections opened: FATAL: sorry, too many clients already
17.10.2024, 21:42:30 - ERROR - Error in getForum service | 
Invalid `prisma.forum.findUnique()` invocation:


Too many database connections opened: FATAL: sorry, too many clients already
17.10.2024, 21:42:40 - ERROR - Error in getForum service | 
Invalid `prisma.forum.findUnique()` invocation:


Too many database connections opened: FATAL: sorry, too many clients already
17.10.2024, 21:42:52 - ERROR - Error in getForum service | 
Invalid `prisma.forum.findUnique()` invocation:


Too many database connections opened: FATAL: sorry, too many clients already
17.10.2024, 21:42:54 - ERROR - Error in getForum service | 
Invalid `prisma.forum.findUnique()` invocation:


Too many database connections opened: FATAL: sorry, too many clients already
17.10.2024, 21:43:04 - ERROR - Error in getForum service | 
Invalid `prisma.forum.findUnique()` invocation:


Too many database connections opened: FATAL: sorry, too many clients already
17.10.2024, 21:43:04 - ERROR - Error in getForum service | 
Invalid `prisma.forum.findUnique()` invocation:


Too many database connections opened: FATAL: sorry, too many clients already
18.10.2024, 13:45:47 - ERROR - Error getting post in post.server.ts | 
Invalid `prisma.post.findUnique()` invocation:

{
  where: {
    id: "cm2ekplmb0064pvb9k7sxbybt"
  },
  select: {
?   id?: true,
?   title?: true,
?   content?: true,
?   authorId?: true,
?   forumId?: true,
?   createdAt?: true,
?   updatedAt?: true,
?   author?: true,
?   forum?: true,
?   comments?: true,
?   _count?: true
  }
}

The `select` statement for type Post must not be empty. Available options are marked with ?.
18.10.2024, 13:46:26 - ERROR - Error getting post in post.server.ts | 
Invalid `prisma.post.findUnique()` invocation:

{
  where: {
    id: "cm2ekplmb0064pvb9k7sxbybt"
  },
  select: {
    id: true,
    title: true,
    content: true,
    forumId: true,
    author: {
      select: {
?       id?: true,
?       email?: true,
?       username?: true,
?       firstName?: true,
?       lastName?: true,
?       password?: true,
?       imgUrl?: true,
?       permission?: true,
?       isTherapist?: true,
?       createdAt?: true,
?       updatedAt?: true,
?       Forum?: true,
?       Post?: true,
?       comments?: true,
?       Therapist?: true,
?       Questionnaire?: true,
?       Article?: true,
?       _count?: true
      }
    }
  }
}

The `select` statement for type User must not be empty. Available options are marked with ?.
18.10.2024, 13:46:28 - ERROR - Error getting post in post.server.ts | 
Invalid `prisma.post.findUnique()` invocation:

{
  where: {
    id: "cm2ekplmb0064pvb9k7sxbybt"
  },
  select: {
    id: true,
    title: true,
    content: true,
    forumId: true,
    author: {
      select: {
?       id?: true,
?       email?: true,
?       username?: true,
?       firstName?: true,
?       lastName?: true,
?       password?: true,
?       imgUrl?: true,
?       permission?: true,
?       isTherapist?: true,
?       createdAt?: true,
?       updatedAt?: true,
?       Forum?: true,
?       Post?: true,
?       comments?: true,
?       Therapist?: true,
?       Questionnaire?: true,
?       Article?: true,
?       _count?: true
      }
    }
  }
}

The `select` statement for type User must not be empty. Available options are marked with ?.
18.10.2024, 13:48:18 - ERROR - Error getting post in post.server.ts | 
Invalid `prisma.post.findUnique()` invocation:

{
  where: {
    id: "cm2ekplmb0064pvb9k7sxbybt"
  },
  select: {
    id: true,
    title: true,
    content: true,
    forumId: true,
    author: {
      select: {
        id: true,
        username: true,
        imgUrl: true
      }
    },
    _count: {
      select: {
?       comments?: true
      }
    }
  }
}

The `select` statement for type PostCountOutputType must not be empty. Available options are marked with ?.
18.10.2024, 13:48:35 - ERROR - Error getting post in post.server.ts | 
Invalid `prisma.post.findUnique()` invocation:

{
  where: {
    id: "cm2ekplmb0064pvb9k7sxbybt"
  },
  select: {
    id: true,
    title: true,
    content: true,
    forumId: true,
    author: {
      select: {
        id: true,
        username: true,
        imgUrl: true
      }
    },
    _count: {
      select: {
        comments: true
      }
    },
    comments: {
      select: {
?       id?: true,
?       content?: true,
?       authorId?: true,
?       postId?: true,
?       parentId?: true,
?       createdAt?: true,
?       author?: true,
?       post?: true,
?       parent?: true,
?       replies?: true,
?       _count?: true
      }
    }
  }
}

The `select` statement for type Comment must not be empty. Available options are marked with ?.
18.10.2024, 13:49:01 - ERROR - Error getting post in post.server.ts | a is not defined
18.10.2024, 13:49:10 - ERROR - Error getting post in post.server.ts | 
Invalid `prisma.post.findUnique()` invocation:

{
  where: {
    id: "cm2ekplmb0064pvb9k7sxbybt"
  },
  select: {
    id: true,
    title: true,
    content: true,
    forumId: true,
    author: {
      select: {
        id: true,
        username: true,
        imgUrl: true
      }
    },
    _count: {
      select: {
        comments: true
      }
    },
    comments: {
      select: {
        id: true,
        content: true,
        createdAt: true,
        author: {
          select: {
?           id?: true,
?           email?: true,
?           username?: true,
?           firstName?: true,
?           lastName?: true,
?           password?: true,
?           imgUrl?: true,
?           permission?: true,
?           isTherapist?: true,
?           createdAt?: true,
?           updatedAt?: true,
?           Forum?: true,
?           Post?: true,
?           comments?: true,
?           Therapist?: true,
?           Questionnaire?: true,
?           Article?: true,
?           _count?: true
          }
        }
      }
    }
  }
}

The `select` statement for type User must not be empty. Available options are marked with ?.
18.10.2024, 13:49:28 - ERROR - Error getting post in post.server.ts | 
Invalid `prisma.post.findUnique()` invocation:

{
  where: {
    id: "cm2ekplmb0064pvb9k7sxbybt"
  },
  select: {
    id: true,
    title: true,
    content: true,
    forumId: true,
    author: {
      select: {
        id: true,
        username: true,
        imgUrl: true
      }
    },
    _count: {
      select: {
        comments: true
      }
    },
    comments: {
      select: {
        id: true,
        content: true,
        createdAt: true,
        author: {
          select: {
            id: true,
            username: true,
            imgUrl: true
          }
        },
        _count: {
          select: {
?           replies?: true
          }
        }
      }
    }
  }
}

The `select` statement for type CommentCountOutputType must not be empty. Available options are marked with ?.
18.10.2024, 13:51:34 - ERROR - Error getting post in post.server.ts | fixedPost is not defined
18.10.2024, 14:19:30 - ERROR - Error in getForum service | Forum not found
18.10.2024, 14:19:38 - ERROR - Error in getForum service | Forum not found
18.10.2024, 14:19:46 - ERROR - Error in getForum service | Forum not found
18.10.2024, 14:19:49 - ERROR - Error in getForum service | Forum not found
18.10.2024, 14:19:50 - ERROR - Error in getForum service | Forum not found
18.10.2024, 14:20:12 - ERROR - Error in getForum service | Forum not found
18.10.2024, 14:43:53 - ERROR - Error getting post in post.server.ts | 
Invalid `prisma.post.findUnique()` invocation:


Too many database connections opened: FATAL: sorry, too many clients already
18.10.2024, 14:44:02 - ERROR - Error getting post in post.server.ts | 
Invalid `prisma.post.findUnique()` invocation:


Too many database connections opened: FATAL: sorry, too many clients already
18.10.2024, 14:44:02 - ERROR - Error getting post in post.server.ts | 
Invalid `prisma.post.findUnique()` invocation:


Too many database connections opened: FATAL: sorry, too many clients already
18.10.2024, 14:44:13 - ERROR - Error getting post in post.server.ts | 
Invalid `prisma.post.findUnique()` invocation:


Too many database connections opened: FATAL: sorry, too many clients already
18.10.2024, 14:44:15 - ERROR - Error getting post in post.server.ts | 
Invalid `prisma.post.findUnique()` invocation:


Too many database connections opened: FATAL: sorry, too many clients already
18.10.2024, 14:44:15 - ERROR - Error getting post in post.server.ts | 
Invalid `prisma.post.findUnique()` invocation:


Too many database connections opened: FATAL: sorry, too many clients already
18.10.2024, 14:44:40 - ERROR - Error getting post in post.server.ts | 
Invalid `prisma.post.findUnique()` invocation:


Too many database connections opened: FATAL: sorry, too many clients already
18.10.2024, 14:44:46 - ERROR - Error getting post in post.server.ts | 
Invalid `prisma.post.findUnique()` invocation:


Too many database connections opened: FATAL: sorry, too many clients already
18.10.2024, 14:44:59 - ERROR - Error getting post in post.server.ts | 
Invalid `prisma.post.findUnique()` invocation:


Too many database connections opened: FATAL: sorry, too many clients already
18.10.2024, 14:45:01 - ERROR - Error getting post in post.server.ts | 
Invalid `prisma.post.findUnique()` invocation:


Too many database connections opened: FATAL: sorry, too many clients already
18.10.2024, 14:45:05 - ERROR - Error getting post in post.server.ts | 
Invalid `prisma.post.findUnique()` invocation:


Too many database connections opened: FATAL: sorry, too many clients already
18.10.2024, 14:45:05 - ERROR - Error getting post in post.server.ts | 
Invalid `prisma.post.findUnique()` invocation:


Too many database connections opened: FATAL: sorry, too many clients already
18.10.2024, 14:45:18 - ERROR - Error getting post in post.server.ts | 
Invalid `prisma.post.findUnique()` invocation:


Too many database connections opened: FATAL: sorry, too many clients already
18.10.2024, 14:45:19 - ERROR - Error getting post in post.server.ts | 
Invalid `prisma.post.findUnique()` invocation:


Too many database connections opened: FATAL: sorry, too many clients already
18.10.2024, 14:45:19 - ERROR - Error getting post in post.server.ts | 
Invalid `prisma.post.findUnique()` invocation:


Too many database connections opened: FATAL: sorry, too many clients already
18.10.2024, 15:23:15 - ERROR - Error getting post in post.server.ts | 
Invalid `prisma.post.findUnique()` invocation:


Too many database connections opened: FATAL: sorry, too many clients already
18.10.2024, 15:23:16 - ERROR - Error getting post in post.server.ts | 
Invalid `prisma.post.findUnique()` invocation:


Too many database connections opened: FATAL: sorry, too many clients already
18.10.2024, 15:23:22 - ERROR - Error getting post in post.server.ts | 
Invalid `prisma.post.findUnique()` invocation:


Too many database connections opened: FATAL: sorry, too many clients already
18.10.2024, 15:40:42 - ERROR - Error getting post in post.server.ts | 
Invalid `prisma.post.findUnique()` invocation:


Too many database connections opened: FATAL: sorry, too many clients already
18.10.2024, 16:35:51 - ERROR - Error querying forums in forum.server.ts | 
Invalid `prisma.forum.findMany()` invocation:


Too many database connections opened: FATAL: sorry, too many clients already
18.10.2024, 16:35:51 - ERROR - Error querying forums in forum.server.ts | 
Invalid `prisma.forum.findMany()` invocation:


Too many database connections opened: FATAL: sorry, too many clients already
18.10.2024, 17:47:19 - ERROR - Error querying forums in forum.server.ts | Cannot read properties of undefined (reading 'id')
18.10.2024, 21:08:42 - ERROR - Error in createForum service | Cannot read properties of undefined (reading 'buildSmallSql')
18.10.2024, 21:10:03 - ERROR - Error in createForum service | 
Invalid `prisma.forum.create()` invocation:

{
  data: {
    description: "test",
    type: "PUBLIC",
    subjects: [],
    admins: {
      connect: [
        {
          id: "cm2en13g50002m296qa3833q8"
        },
        {
          id: "cm2en13ga0009m296br8pu3od"
        },
        {
          id: "cm2en13gi000dm29632sn3inh"
        },
        {
          id: "cm2en13gp000km296p3emg555"
        }
      ]
    },
+   title: String
  },
  select: {
    id: true,
    description: true,
    admins: {
      select: {
        id: true,
        username: true,
        imgUrl: true
      }
    },
    type: true,
    subjects: true,
    title: true,
    posts: {
      select: {
        id: true,
        title: true,
        content: true,
        forumId: true,
        author: {
          select: {
            id: true,
            username: true,
            imgUrl: true
          }
        },
        _count: {
          select: {
            comments: true
          }
        },
        comments: {
          orderBy: {
            createdAt: "desc"
          },
          select: {
            author: {
              select: {
                id: true,
                username: true,
                imgUrl: true
              }
            },
            content: true,
            createdAt: true,
            id: true
          },
          take: 1
        }
      }
    }
  }
}

Argument `title` must not be null.
